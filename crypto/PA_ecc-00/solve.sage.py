'''
print((p, a, b), G)
print(pk)
print(ct)

'''


# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_10829670737591616881 = Integer(10829670737591616881); _sage_const_5654694684284925384 = Integer(5654694684284925384); _sage_const_8813703413191082292 = Integer(8813703413191082292); _sage_const_1641649954652386070 = Integer(1641649954652386070); _sage_const_6138061874724201376 = Integer(6138061874724201376); _sage_const_5002204260689444003 = Integer(5002204260689444003); _sage_const_4864358965035087900 = Integer(4864358965035087900); _sage_const_51088427393127044 = Integer(51088427393127044); _sage_const_4878776382292322395 = Integer(4878776382292322395); _sage_const_10781379197071597919 = Integer(10781379197071597919); _sage_const_6012831518044176787 = Integer(6012831518044176787); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)

p = _sage_const_10829670737591616881 
a = _sage_const_5654694684284925384 
b = _sage_const_8813703413191082292 
# 建立椭圆曲线
E = EllipticCurve(GF(p), [a, b])

G = E((_sage_const_1641649954652386070 , _sage_const_6138061874724201376 ))
pk = E((_sage_const_5002204260689444003 , _sage_const_4864358965035087900 ))
ct = [E((_sage_const_51088427393127044 , _sage_const_4878776382292322395 )), E((_sage_const_10781379197071597919 , _sage_const_6012831518044176787 ))]
# 计算椭圆曲线的阶
n = E.order()
print(n)
print(G)
print(pk)
# for possible_private_key in range(n):
#     print(possible_private_key)
#     print(G*possible_private_key)
#     if G * possible_private_key == pk:
#         print("Found private key:", possible_private_key)
#         break

# 计算私钥

d = discrete_log(pk,G,operation="+")

print(d)

print(ct[_sage_const_1 ]-ct[_sage_const_0 ]*d)

pt = ct[_sage_const_1 ]-ct[_sage_const_0 ]*d
print("The FLAG is NeSE{" + str(pt[_sage_const_0 ]) + str(pt[_sage_const_1 ]) + "}")

