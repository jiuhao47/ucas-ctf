from Crypto.Util.number import long_to_bytes
ct = 49142248081839213780951018320926828673603282567702663179722285963872003313779655789051743051829247420620596227878385752718208561890228873546267531997501725365089529778761649351060657960983919271908407774891325928754812626440281330228954547735373619888862800687068637524049001182021331458179667324158338082610
dp = 4682717479512704140462694651763058839545973405292373574775280513301540730065888133312386650456457544130223844885399633471004505956855817235951281890116159
N = 156910763136476753971126004039741775941182189164116674706581099198014095880923648528566597114351047404463294829037088029834770002619074190263144012526595777597825483360592786328298727083863458320304787608492204859053251154849305967496550631593420834985344403767363911998533409816977600144391366976014074956927
e = 65537

for X in range(1, e):
    if N % (((dp * e - 1) // X) + 1) == 0:
        print("Find")
        p = ((dp * e - 1) // X) + 1
        if N % p == 0:
            q = N // p
            phi = (p - 1) * (q - 1)
            d = inverse_mod(e, phi)
            m = pow(ct, d, N)
            print(long_to_bytes(m))
# NeSE{an_ex4mpl3_f0r_dp_leak_attack_h2938yhfwoif923y49r2hf29f2jd29jd92}
