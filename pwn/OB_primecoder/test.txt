char test(longlong input,int prime)

{
  ulong judge;
  char valid;
  ulong i;
  ulong input_sub_1;
  
  valid = '\x01';
  if ((prime != input) && (valid = '\0', (input & 1U) != 0)) {
    input_sub_1 = input - 1;
    //input 不与0xf以内素数相等，则将其减1
    for (i = input_sub_1; (i & 1) == 0; i = (long)i >> 1) {
    }
    //除2循环
    //i为input减一循环除2完毕后的结果（input为奇数）
    //i为input-1，（input为偶数）
    judge = fast_pow(prime,i,input);
    valid = '\x01';
    if (judge != 1) {
      while ((long)i < (long)input_sub_1) {
        i = i * 2;
        if (input_sub_1 == judge) {
          return '\x01';
        }
        judge = multimod(judge,judge,input);
      }
      valid = '\0';
    }
    return valid;
  }
  return valid;
}